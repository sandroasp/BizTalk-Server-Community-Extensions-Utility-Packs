//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BizTalk.Conversion.Functoids {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ConversionResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ConversionResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BizTalk.Conversion.Functoids.ConversionResource", typeof(ConversionResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IDS_CONVERTDATETIMEFUNCTOID_BITMAP {
            get {
                object obj = ResourceManager.GetObject("IDS_CONVERTDATETIMEFUNCTOID_BITMAP", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This functoid allows you to convert datetime format
        ///Input:
        ///- input date in string format
        ///- input Format in string format (yyyy-MM-dd HH:mm:ss)
        ///- output Format in string format (yyyy-MM-dd HH:mm:ss).
        /// </summary>
        internal static string IDS_CONVERTDATETIMEFUNCTOID_DESCRIPTION {
            get {
                return ResourceManager.GetString("IDS_CONVERTDATETIMEFUNCTOID_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert datetime format.
        /// </summary>
        internal static string IDS_CONVERTDATETIMEFUNCTOID_NAME {
            get {
                return ResourceManager.GetString("IDS_CONVERTDATETIMEFUNCTOID_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns traditional date (Human Readable Date) in the format specified.
        /// </summary>
        internal static string IDS_CONVERTDATETIMEFUNCTOID_TOOLTIP {
            get {
                return ResourceManager.GetString("IDS_CONVERTDATETIMEFUNCTOID_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IDS_DATETOEPOCHFUNCTOID_BITMAP {
            get {
                object obj = ResourceManager.GetObject("IDS_DATETOEPOCHFUNCTOID_BITMAP", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This functoid allows you to convert a traditional date (Human Readable Date) into a unix date (Epoch Date)
        ///Input:
        ///- string datetime (Human Readable Date)
        ///- string format (yyyy-MM-dd HH:mm:ss).
        /// </summary>
        internal static string IDS_DATETOEPOCHFUNCTOID_DESCRIPTION {
            get {
                return ResourceManager.GetString("IDS_DATETOEPOCHFUNCTOID_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert from human readable to epoch date Functoid.
        /// </summary>
        internal static string IDS_DATETOEPOCHFUNCTOID_NAME {
            get {
                return ResourceManager.GetString("IDS_DATETOEPOCHFUNCTOID_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns Unix timestamp (Epoch Date).
        /// </summary>
        internal static string IDS_DATETOEPOCHFUNCTOID_TOOLTIP {
            get {
                return ResourceManager.GetString("IDS_DATETOEPOCHFUNCTOID_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IDS_EPOCHTODATEFUNCTOID_BITMAP {
            get {
                object obj = ResourceManager.GetObject("IDS_EPOCHTODATEFUNCTOID_BITMAP", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This functoid allows you to convert a unix date (Epoch Date) into a traditional date (Human Readable Date)
        ///Input:
        ///- long Unix timestamp) (Epoch Date).
        /// </summary>
        internal static string IDS_EPOCHTODATEFUNCTOID_DESCRIPTION {
            get {
                return ResourceManager.GetString("IDS_EPOCHTODATEFUNCTOID_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Convert from epoch to human readable date Functoid.
        /// </summary>
        internal static string IDS_EPOCHTODATEFUNCTOID_NAME {
            get {
                return ResourceManager.GetString("IDS_EPOCHTODATEFUNCTOID_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns traditional date (Human Readable Date).
        /// </summary>
        internal static string IDS_EPOCHTODATEFUNCTOID_TOOLTIP {
            get {
                return ResourceManager.GetString("IDS_EPOCHTODATEFUNCTOID_TOOLTIP", resourceCulture);
            }
        }
    }
}
