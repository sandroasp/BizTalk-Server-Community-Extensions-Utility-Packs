//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BizTalk.Logical.Functoids {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LogicalResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LogicalResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BizTalk.Logical.Functoids.LogicalResources", typeof(LogicalResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IDB_ADVLOGICALAND {
            get {
                object obj = ResourceManager.GetObject("IDB_ADVLOGICALAND", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IDB_ADVLOGICALEQ {
            get {
                object obj = ResourceManager.GetObject("IDB_ADVLOGICALEQ", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IDB_ADVLOGICALGT {
            get {
                object obj = ResourceManager.GetObject("IDB_ADVLOGICALGT", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IDB_ADVLOGICALGTE {
            get {
                object obj = ResourceManager.GetObject("IDB_ADVLOGICALGTE", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IDB_ADVLOGICALLT {
            get {
                object obj = ResourceManager.GetObject("IDB_ADVLOGICALLT", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IDB_ADVLOGICALLTE {
            get {
                object obj = ResourceManager.GetObject("IDB_ADVLOGICALLTE", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IDB_ADVLOGICALNE {
            get {
                object obj = ResourceManager.GetObject("IDB_ADVLOGICALNE", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IDB_ADVLOGICALNOT {
            get {
                object obj = ResourceManager.GetObject("IDB_ADVLOGICALNOT", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IDB_ADVLOGICALOR {
            get {
                object obj = ResourceManager.GetObject("IDB_ADVLOGICALOR", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the Advance Logical AND functoid to return the logical AND of input parameters. This functoid requires two to one hundred input parameters..
        /// </summary>
        internal static string IDS_ADVLOGICALAND_DESCRIPTION {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALAND_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advance Logical AND Functoid.
        /// </summary>
        internal static string IDS_ADVLOGICALAND_NAME {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALAND_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns the logical AND of parameters..
        /// </summary>
        internal static string IDS_ADVLOGICALAND_TOOLTIP {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALAND_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the Advance Equal functoid to return the value &quot;true&quot; if the first input parameter is equal to the second input parameter. This functoid requires two input parameters..
        /// </summary>
        internal static string IDS_ADVLOGICALEQ_DESCRIPTION {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALEQ_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advance Equal Functoid.
        /// </summary>
        internal static string IDS_ADVLOGICALEQ_NAME {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALEQ_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns &quot;true&quot; if the first parameter is equal to the second parameter..
        /// </summary>
        internal static string IDS_ADVLOGICALEQ_TOOLTIP {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALEQ_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the Advance Greater Than functoid to return the value &quot;true&quot; if the first input parameter is greater than the second input parameter. This functoid requires two input parameters..
        /// </summary>
        internal static string IDS_ADVLOGICALGT_DESCRIPTION {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALGT_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advance Greater Than Functoid.
        /// </summary>
        internal static string IDS_ADVLOGICALGT_NAME {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALGT_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns &quot;true&quot; if the first parameter is greater than the second parameter..
        /// </summary>
        internal static string IDS_ADVLOGICALGT_TOOLTIP {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALGT_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the Advance Greater Than or Equal To functoid to return the value &quot;true&quot; if the first input parameter is greater than or equal to the second input parameter. This functoid requires two input parameters..
        /// </summary>
        internal static string IDS_ADVLOGICALGTE_DESCRIPTION {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALGTE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advance Greater Than or Equal To Functoid.
        /// </summary>
        internal static string IDS_ADVLOGICALGTE_NAME {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALGTE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns &quot;true&quot; if the first parameter is greater than or equal to the second parameter..
        /// </summary>
        internal static string IDS_ADVLOGICALGTE_TOOLTIP {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALGTE_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the Advance Less Than functoid to return the value &quot;true&quot; if the first input parameter is less than the second input parameter. This functoid requires two input parameters..
        /// </summary>
        internal static string IDS_ADVLOGICALLT_DESCRIPTION {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALLT_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advance Less Than Functoid.
        /// </summary>
        internal static string IDS_ADVLOGICALLT_NAME {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALLT_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns &quot;true&quot; if the first parameter is less than the second parameter..
        /// </summary>
        internal static string IDS_ADVLOGICALLT_TOOLTIP {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALLT_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the Advance Less Than or Equal To functoid to return the value &quot;true&quot; if the first input parameter is less than or equal to the second input parameter. This functoid requires two input parameters..
        /// </summary>
        internal static string IDS_ADVLOGICALLTE_DESCRIPTION {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALLTE_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advance Less Than or Equal To Functoid.
        /// </summary>
        internal static string IDS_ADVLOGICALLTE_NAME {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALLTE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns &quot;true&quot; if the first parameter is less than or equal to the second parameter..
        /// </summary>
        internal static string IDS_ADVLOGICALLTE_TOOLTIP {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALLTE_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advance Not Equal Functoid.
        /// </summary>
        internal static string IDS_ADVLOGICALNE_NAME {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALNE_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns &quot;true&quot; if the first parameter is not equal to the second parameter..
        /// </summary>
        internal static string IDS_ADVLOGICALNE_TOOLTIP {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALNE_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the Advance Not Equal functoid to return the value “true” if the first input parameter is not equal to the second input parameter. This functoid requires two input parameters..
        /// </summary>
        internal static string IDS_ADVLOGICALNET_DESCRIPTION {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALNET_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the Advance Logical NOT functoid to return the logical inversion of the input parameter. This functoid requires one input parameter only..
        /// </summary>
        internal static string IDS_ADVLOGICALNOT_DESCRIPTION {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALNOT_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advance Logical NOT Functoid.
        /// </summary>
        internal static string IDS_ADVLOGICALNOT_NAME {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALNOT_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns the logical inversion of the input parameter..
        /// </summary>
        internal static string IDS_ADVLOGICALNOT_TOOLTIP {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALNOT_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the Advance Logical OR functoid to return the logical OR of input parameters. The input parameters have to be boolean or numeric. This functoid requires two to one hundred input parameters..
        /// </summary>
        internal static string IDS_ADVLOGICALOR_DESCRIPTION {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALOR_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advance Logical OR Functoid.
        /// </summary>
        internal static string IDS_ADVLOGICALOR_NAME {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALOR_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns the logical OR of parameters..
        /// </summary>
        internal static string IDS_ADVLOGICALOR_TOOLTIP {
            get {
                return ResourceManager.GetString("IDS_ADVLOGICALOR_TOOLTIP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap IDS_IFELSEFUNCTOID_BITMAP {
            get {
                object obj = ResourceManager.GetObject("IDS_IFELSEFUNCTOID_BITMAP", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use the If-Then-Else Functoid to return a value from one of two input parameters based on a condition. If the condition (first input) is True, then the value of the second input parameter is returned, otherwise the Third input is returned..
        /// </summary>
        internal static string IDS_IFELSEFUNCTOID_DESCRIPTION {
            get {
                return ResourceManager.GetString("IDS_IFELSEFUNCTOID_DESCRIPTION", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If-Then-Else Functoid.
        /// </summary>
        internal static string IDS_IFELSEFUNCTOID_NAME {
            get {
                return ResourceManager.GetString("IDS_IFELSEFUNCTOID_NAME", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This functoid requires three input parameters.
        ///Parameters:
        ///- Boolean representing the result of a previous condition
        ///- The return value if the condition is True. 
        ///- The return value if the condition is False..
        /// </summary>
        internal static string IDS_IFELSEFUNCTOID_TOOLTIP {
            get {
                return ResourceManager.GetString("IDS_IFELSEFUNCTOID_TOOLTIP", resourceCulture);
            }
        }
    }
}
